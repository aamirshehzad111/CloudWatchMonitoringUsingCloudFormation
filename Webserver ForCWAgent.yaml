AWSTemplateFormatVersion: 2010-09-09
Description: EC2 Instance For Application Sever

Parameters:

  # NetworkStackParameter: 
  #   Type: String
   
  
  AZsSelection: 
    Description: Name of an existing AZs for the EC2 instance
    Type: 'AWS::EC2::Subnet::Id'  
    ConstraintDescription: must be a valid name  

  SG: 
    Description: Name of an Security Group for the EC2 instance
    Type: AWS::EC2::SecurityGroup::Id
    ConstraintDescription: must be a valid name 
  KeyName: 
    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: "aamirKP1"
    ConstraintDescription: must be the name of an existing EC2 KeyPair
  RoleName: 
    Description: Role description
    Type: "String"
    Default: "CW-Agent-Role"

    
  InstaceTypeParam:
    Type: "String"
    Default: "t2.micro"
    AllowedValues: 
      - t2.micro
      - m3.medium
      - m3.large
      - c3.large
      - c3.xlarge

Mappings:
  EC2RegionMapping:
    us-east-1:
      AMIs: ami-0ff8a91507f77f867
    us-west-1:
      AMIs: ami-0bdb828fd58c52235
    eu-west-1:
      AMIs: ami-047bb4163c506cd98
    ap-northeast-1:
      AMIs: ami-06cd52961ce9f0d85
    ap-southeast-1:
      AMIs: ami-08569b978cc4dfa10


#In Resources Section we are gonna defice EC2 instance that will be work as an Applicaion Server
Resources:
    
  EC2InstaneWBS:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: 
        Ref: "AZsSelection"
      IamInstanceProfile: !Ref "RoleName"
      InstanceType: !Ref "InstaceTypeParam"
      ImageId: !FindInMap
        - EC2RegionMapping 
        - !Ref AWS::Region 
        - AMIs
      SecurityGroupIds:
        - !Ref SG
      #   - Fn::ImportValue: 
      #       !Sub "${NetworkStackParameter}-WEBSG"
      KeyName: !Ref "KeyName"

      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          wget https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
          sudo rpm -U ./amazon-cloudwatch-agent.rpm
          cd /opt/aws/amazon-cloudwatch-agent/bin/
          wget https://aamir-learning.s3.amazonaws.com/config.json
          cd ~
          sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json -s

          
          
                           

      Tags:
        - Key: Name
          Value: aamirWebServer 


Outputs:
  InstanceDNS:
    Value: !GetAtt EC2InstaneWBS.PublicDnsName

  InstanceName:
    Description: The ID of Ec2
    Value: !Ref EC2InstaneWBS
    Export:
      Name: !Sub 'Webserver-EC2InstaneWBS'